global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'

endglobal

snippet new "boilerplate" b
\RequirePackage[l2tabu, orthodox]{nag} % linter (must be before \documentclass)
%\documentclass[addpoints]{exam}
\documentclass{article}
\usepackage[fontsize=10.75, overfullrule=true]{scrextend} \setlength{\textwidth}{357pt} % Set font size
\usepackage[T1]{fontenc}
\usepackage{mlmodern,exscale}
\usepackage[top=0.8in, bottom=1in, marginparsep=0.95cm, marginparwidth=1.8cm, textwidth=\textwidth]{geometry}
\usepackage{amsmath,amssymb,amsfonts,amsthm,mathtools,nicefrac,oubraces,leftindex}
\usepackage{enumitem}
\usepackage{parskip}
\usepackage[colorlinks=true, linkcolor=black, urlcolor=blue]{hyperref} % For TOC
\usepackage{changepage} % For indenting text blocks with \begin{adjustwidth}{1.5em}{1.5em}
\usepackage[activate={true,nocompatibility},final,tracking=true,kerning=true,factor=1100,stretch=10,shrink=10]{microtype}
\usepackage[all]{onlyamsmath} % linter
\usepackage{marginnote}
\usepackage{xcolor}
\usepackage{tikz,pgfplots}
\usepackage{lastpage}
\usepackage{multicol}
\usepackage{etoolbox}
\usepackage{venndiagram}
\usepackage{pgffor,xifthen} % For foreach loops & if statements
%\usepackage{booktabs}
\usepackage{newunicodechar}

\pgfplotsset{compat=1.18}

\newcommand{\mymarginr}[1]{\normalmarginpar\marginnote{\footnotesize {#1}}}
\newcommand{\mymarginl}[1]{\reversemarginpar\marginnote{\footnotesize {#1}}}

\DeclareMathOperator{\arcsec}{arcsec}
\DeclareMathOperator{\arccsc}{arccsc}
\DeclareMathOperator{\arccot}{arccot}
\renewcommand{\O}{\ensuremath{\varnothing}}
\newcommand{\N}{\ensuremath{\mathbb{N}}}
\newcommand{\Z}{\ensuremath{\mathbb{Z}}}
\newcommand{\Q}{\ensuremath{\mathbb{Q}}}
\newcommand{\R}{\ensuremath{\mathbb{R}}}
\newcommand{\C}{\ensuremath{\mathbb{C}}}
\renewcommand{\d}{\ensuremath{\, d}}
\let\temp\kappa \let\kappa\varkappa \let\varkappa\temp
\let\temp\epsilon \let\epsilon\varepsilon \let\varepsilon\temp
\apptocmd{\lim}{\limits}{}{}
\apptocmd{\sum}{\limits}{}{}
\apptocmd{\prod}{\limits}{}{}

\begin{document}
	$0
\end{document}
endsnippet

# TEXT SNIPPETS:
context "not math()"
snippet iii "italics" wA
\\textit{${1:${VISUAL}}}$0
endsnippet

context "not math()"
snippet bbb "bold face" wA
\\textbf{${1:${VISUAL}}}$0
endsnippet

context "not math()"
snippet uuu "underline" wA
\\underline{${1:${VISUAL}}}$0
endsnippet

context "not math()"
snippet eee "emphatic" wA
\\emph{${1:${VISUAL}}}$0
endsnippet

context "not math()"
snippet sss "sans serif" wA
\\textsf{${1:${VISUAL}}}$0
endsnippet

context "not math()"
snippet SSS "small caps" wA
\\textsc{${1:${VISUAL}}}$0
endsnippet

context "not math()"
snippet ttt "monospace" wA
\\texttt{${1:${VISUAL}}}$0
endsnippet


# ENVIRONMENTS:
snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}[start=1, label=\arabic*)]
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

# next equation in align
snippet == "equals" iA
&= $1 \\\\
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet


# MODES:
#snippet mm "Math" wA
#$${1}$`!p
#if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
#	snip.rv = ' '
#else:
#	snip.rv = ''
#`$2
#endsnippet
snippet mm "Math" wA
$${1}$$0
endsnippet

snippet dm "Math display mode" wA
\[
	${1:${VISUAL}}
\]$0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet


# FRACTIONS:
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

# Not exactly sure what this one does
snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet


# DELIMITERS:
snippet () "($1)" iA
($1)
endsnippet

snippet [] "[$1]" iA
[$1]
endsnippet

snippet {} "{$1}" iA
{$1}
endsnippet

context "math()"
snippet ceil "ceil" iA
\lceil $1 \rceil$0
endsnippet

context "math()"
snippet floor "floor" iA
\lfloor $1 \rfloor$0
endsnippet

snippet lr( "left( right)" iA
\left( ${1:${VISUAL}} \right)$0
endsnippet

snippet lrco "left[ right) (co=closed-open)" iA
\left[ ${1:${VISUAL}} \right)$0
endsnippet

snippet lroc "left( right] (co=open-closed)" iA
\left( ${1:${VISUAL}} \right]$0
endsnippet

snippet lr| "left| right|" iA
\lvert ${1:${VISUAL}} \rvert$0
endsnippet

snippet lrn "left|| right|| (n=norm)" iA
\lVert ${1:${VISUAL}} \rVert$0
endsnippet

snippet lr{ "left\{ right\}" iA
\\{ ${1:${VISUAL}} \\}$0
endsnippet

snippet lrb "left\{ right\}" iA
\\{ ${1:${VISUAL}} \\}$0
endsnippet

snippet lr[ "left[ right]" iA
\left[ ${1:${VISUAL}} \right]$0
endsnippet

snippet lra "leftangle rightangle" iA
\langle ${1:${VISUAL}} \rangle$0
endsnippet

#context "math()"
#snippet set "set" wA
#\\{$1\\} $0
#endsnippet

context "math()"
snippet seq "sequence" wA
(${1:x}_${2:n})_{${3:$2} \\in ${4:\\N}}$0
endsnippet


# DECORATIONS:
context "math()"
snippet inv "inverse" iA
^{-1}
endsnippet

context "math()"
snippet comp "complement" iA
^{\mathrm{C}}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

# MATRICES:
#snippet pmat "pmat" iA
#\begin{pmatrix} $1 \end{pmatrix} $0
#endsnippet

#snippet bmat "bmat" iA
#\begin{bmatrix} $1 \end{bmatrix} $0
#endsnippet

context "math()"
snippet pmat "pmat" iA
\pmat{ $1 }
endsnippet

context "math()"
snippet bmat "bmat" iA
\bmat{ $1 }
endsnippet


# LARGE OPERATORS:
context "math()"
snippet sum "sum" wA
\sum_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

priority 300
context "math()"
snippet Int "integral with bounds" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} \d ${4}$0
endsnippet

priority 300
context "math()"
snippet INT "integral with bounds above and below" wA
\int\limits_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} \d ${4}$0
endsnippet

context "math()"
snippet uuu "union" wA
\bigcup_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet uud "union (disjoint)" wA
\bigcupdot_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet nnn "intersection" wA
\bigcap_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet uus "set sequence limsup" wA
\bigcap_{${1:n}=${2:1}}^{${3:\infty}} \bigcup_{${4:k}=${5:n}}^{${6:\infty}} $0
endsnippet

context "math()"
snippet uui "set sequence liminf" wA
\bigcup_{${1:n}=${2:1}}^{${3:\infty}} \bigcap_{${4:k}=${5:n}}^{${6:\infty}} $0
endsnippet

#snippet uuu "bigcup" iA
#\bigcup_{${1:i \in ${2: I}}} $0
#endsnippet

#snippet nnn "bigcap" iA
#\bigcap_{${1:i \in ${2: I}}} $0
#endsnippet

context "math()"
snippet prod "product" wA
\prod_{${1:n}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet lll "limit" wA
\lim_{${1:n} \to ${2:\infty}} $0
endsnippet

context "math()"
snippet lls "limsup" wA
\limsup_{${1:n} \to \infty} $0
endsnippet

context "math()"
snippet lli "liminf" wA
\liminf_{${1:n} \to \infty} $0
endsnippet


# RADICALS:
context "math()"
snippet sqrt "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet


# SCRIPTS:
context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet pd "^2 (power dos)" iA
^2
endsnippet

context "math()"
snippet pt "^3 (power tres)" iA
^3
endsnippet

context "math()"
snippet ^^ "to the power" iA
^{$1}$0
endsnippet

#context "math()"
#snippet rd "to the ... power" iA
#^{($1)}$0
#endsnippet


# FUNCTIONS:
priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet


# FONTS:
context "math()"
snippet mcal "mathcal" iwA
\mathcal{$1}$0
endsnippet

context "math()"
snippet mrm "mathrm" iwA
\mathrm{$1}$0
endsnippet

context "math()"
snippet mit "mathit" iwA
\mathit{$1}$0
endsnippet

context "math()"
snippet mbf "mathbf" iwA
\mathbf{$1}$0
endsnippet

context "math()"
snippet mbb "mathbb" iwA
\mathbb{$1}$0
endsnippet

context "math()"
snippet mfrak "mathfrak" iwA
\mathfrak{$1}$0
endsnippet

context "math()"
snippet msf "mathsf" iwA
\mathsf{$1}$0
endsnippet

context "math()"
snippet mscr "mathscr" iwA
\mathscr{$1}$0
endsnippet


# SYMBOLS:
context "math()"
snippet ooo "\infty" iA
\infty
endsnippet

priority 100
context "math()"
snippet ... "ldots" iA
\ldots
endsnippet

context "math()"
snippet ,,, "cdots" iA
\cdots
endsnippet

context "math()"
snippet NN "n" iA
\N
endsnippet

context "math()"
snippet OO "emptyset" iA
\O
endsnippet

context "math()"
snippet RR "real" iA
\R
endsnippet

context "math()"
snippet QQ "Q" iA
\Q
endsnippet

context "math()"
snippet ZZ "Z" iA
\Z
endsnippet

context "math()"
snippet FF "Mathcal F" iA
\mathcal{F}
endsnippet

context "math()"
snippet AA "Mathcal A" iA
\mathcal{A}
endsnippet

context "math()"
snippet CC "Mathcal C" iA
\C
endsnippet

context "math()"
snippet DD "Mathcal D" iA
\mathcal{D}
endsnippet


# GREEK LETTERS
context "math()"
snippet gaa "alpha" iA
\alpha
endsnippet

context "math()"
snippet gbb "beta" iA
\beta
endsnippet

context "math()"
snippet ggg "gamma" iA
\gamma
endsnippet

context "math()"
snippet gdd "delta" iA
\delta
endsnippet

context "math()"
snippet gee "epsilon" iA
\epsilon
endsnippet

context "math()"
snippet gzz "zeta" iA
\zeta
endsnippet

context "math()"
snippet ghh "eta" iA
\eta
endsnippet

context "math()"
snippet guu "theta" iA
\theta
endsnippet

context "math()"
snippet gii "iota" iA
\iota
endsnippet

context "math()"
snippet gkk "kappa" iA
\kappa
endsnippet

context "math()"
snippet gll "lambda" iA
\lambda
endsnippet

context "math()"
snippet gmm "mu" iA
\mu
endsnippet

context "math()"
snippet gnn "nu" iA
\nu
endsnippet

context "math()"
snippet gjj "xi" iA
\xi
endsnippet

context "math()"
snippet gpp "pi" iA
\pi
endsnippet

context "math()"
snippet grr "rho" iA
\rho
endsnippet

context "math()"
snippet gss "sigma" iA
\sigma
endsnippet

context "math()"
snippet gww "varsigma" iA
\varsigma
endsnippet

context "math()"
snippet gtt "tau" iA
\tau
endsnippet

context "math()"
snippet gyy "upsilon" iA
\upsilon
endsnippet

context "math()"
snippet gff "phi" iA
\phi
endsnippet

# The priority avoids conflict with the "xx" snippet.
priority 200
context "math()"
snippet gxx "chi" iA
\chi
endsnippet

context "math()"
snippet gcc "psi" iA
\psi
endsnippet

context "math()"
snippet gvv "omega" iA
\omega
endsnippet

context "math()"
snippet gqq "digamma" iA
\digamma
endsnippet

context "math()"
snippet '(Ggg|gGG)' "Gamma" iAr
\Gamma
endsnippet

context "math()"
snippet '(Gdd|gDD)' "Delta" iAr
\Delta
endsnippet

context "math()"
snippet '(Guu|gUU)' "Theta" iAr
\Theta
endsnippet

context "math()"
snippet '(Gll|gLL)' "Lambda" iAr
\Lambda
endsnippet

context "math()"
snippet '(Gjj|gJJ)' "Xi" iAr
\Xi
endsnippet

context "math()"
snippet '(Gpp|gPP)' "Pi" iAr
\Pi
endsnippet

context "math()"
snippet '(Gss|gSS)' "Sigma" iAr
\Sigma
endsnippet

context "math()"
snippet '(Gyy|gYY)' "Upsilon" iAr
\Upsilon
endsnippet

context "math()"
snippet '(Gff|gFF)' "Phi" iAr
\Phi
endsnippet

context "math()"
snippet '(Gcc|gCC)' "Psi" iAr
\Psi
endsnippet

context "math()"
snippet '(Gvv|gVV)' "Omega" iAr
\Omega
endsnippet


# INFIX OPERATORS AND RELATIONS:
snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet notin "not in " iA
\notin 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

context "math()"
snippet iso "cong " iA
\cong 
endsnippet

context "math()"
snippet nis "ncong " iA
\ncong 
endsnippet

context "math()"
snippet ccc "subset" Ai
\subset 
endsnippet

context "math()"
snippet cce "subset or =" Ai
\subseteq 
endsnippet

context "math()"
snippet ccn "subset and !=" Ai
\subsetneq 
endsnippet

context "math()"
snippet nce "Not a subset and !=" Ai
\nsubseteq 
endsnippet

priority 100
context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet -- "otimes" iA
\otimes 
endsnippet

context "math()"
snippet @@ "otimes" iA
\oplus 
endsnippet

context "math()"
snippet 'qq ' "mapsto" riA
\mapsto 
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

context "math()"
snippet xto "xlongrightarrow" iA
\xlongrightarrow{$1} $0
endsnippet

context "math()"
snippet of "composed" iA
\circ 
endsnippet

context "math()"
snippet imp "implies" Ai
\implies 
endsnippet

context "math()"
snippet pmi "impliedby" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff 
endsnippet
